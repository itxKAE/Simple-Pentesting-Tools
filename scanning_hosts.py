import socket
import time

# Set Default Timeout
socket.setdefaulttimeout(1)

# User Inputs Target Network Address
network_addr = raw_input("\nEnter the Targeted Network Address: ") #Use 'input' for Windows
network_addr_array = network_addr.split('.')

# User Inputs Target Network Prefix (Supports from /24 to /30)
network_string = network_addr_array[0] + "." + network_addr_array[1] + "." + network_addr_array[2] + "."
network_bits = int(input("Enter the Network Bits: "))

# Process Start Time
start_time = time.time()

# Host Scanning Function
def hostscan(addr):
   network_socket = socket.socket(socket.AF_INET,socket.SOCK_STREAM)
   result = network_socket.connect_ex((addr,135))
   if result == 0:
      return 1
   else:
      return 0

# Network Bits Translation (Supports from /24 to /30)
start = int(network_addr_array[3]) + 1
if network_bits == 24:
    end = 255
elif network_bits == 25:
    end = 127
elif network_bits == 26:
    end = 63
elif network_bits == 27:
    end = 31
elif network_bits == 28:
    end = 15
elif network_bits == 29:
    end = 7
else:
    end = 3

# Executes the Function hostscan() on the Given Hosts
def hosts_check():
   for ip in range(1, end):
      host_addr = network_string + str(ip)
      if (hostscan(host_addr)):
         print("%s is live" % host_addr)
      else:
          print("%s is dead" % host_addr)

# Execution
print("Beginning Hosts Scan...\n")
hosts_check()
print("\nHosts Scan Completed!")

# Output
time_taken = time.time() - start_time
print ("Time Taken: %s seconds\n" % time_taken)
